[{"E:\\Projects\\working\\React-development\\project\\sroope-dashboard\\src\\components\\InvestorsPie.js":"1","E:\\Projects\\working\\React-development\\project\\sroope-dashboard\\src\\components\\InvestInFundModal.js":"2","E:\\Projects\\working\\React-development\\project\\sroope-dashboard\\src\\App.js":"3","E:\\Projects\\working\\React-development\\project\\sroope-dashboard\\src\\index.js":"4","E:\\Projects\\working\\React-development\\project\\sroope-dashboard\\src\\components\\Investors.js":"5"},{"size":890,"mtime":1610177089143,"results":"6","hashOfConfig":"7"},{"size":2159,"mtime":1610222279941,"results":"8","hashOfConfig":"7"},{"size":3919,"mtime":1610188043929,"results":"9","hashOfConfig":"7"},{"size":219,"mtime":1610011882890,"results":"10","hashOfConfig":"7"},{"size":1035,"mtime":1609982697000,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"mko89n",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Projects\\working\\React-development\\project\\sroope-dashboard\\src\\components\\InvestorsPie.js",[],"E:\\Projects\\working\\React-development\\project\\sroope-dashboard\\src\\components\\InvestInFundModal.js",[],"E:\\Projects\\working\\React-development\\project\\sroope-dashboard\\src\\App.js",["24","25"],"import React, { useEffect, useState } from 'react';\nimport Header from './components/Header';\nimport Fund from './components/Fund';\nimport Investors from './components/Investors';\nimport InvestorsPie from './components/InvestorsPie';\nimport InvestorsBar from './components/InvestorsBar';\nimport Properties from './components/Properties.js';\nimport InvestInFundModal from './components/InvestInFundModal';\n\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n\n  const [users, setUsers] = useState('');\n  const [funds, setFunds] = useState([]);\n  const [investors, setInvestors] = useState([]);\n  const [properties, setProperties] = useState([]);\n\n  const getFundBalances = async () => {\n    // Solidity: Data to be returned using contract.methods.call() \n    const fundX = [{ \n      fundName: 'Fund 1',\n      fundTotalShares: 300,\n      fundShareBalance: 30,\n      fundSharePrice: 1.25,\n      fundShareValue: 300 * 1.25,\n      fundDaiBalance: 20 }]; \n\n    return fundX;\n  }\n\n  const getInvestorBalances = async () => {\n    // Solidity: Data to be returned using contract.methods.call() \n    const investorsX = [{\n      investorAddr: '0xBBDF7d21E98b64Eaa146d17e670a07A6B3d93b5e',\n      investorName: 'Investor 1',\n      investorCountry: 'GB',\n      shareBalance: 20,\n      sharePercent: 20/300 },\n      {\n      investorAddr: '0xc151075CDfdd12558871C545C612E09758BE1e71', \n      investorName: 'Investor 2',\n      investorCountry: 'GB',\n      shareBalance: 30,\n      sharePercent: 30/300 },\n      {\n      investorAddr: '0x673E063A6925c234C29410DD998846b42528a3F0',\n      investorName: 'Investor 3',\n      investorCountry: 'FR',\n      shareBalance: 30,\n      sharePercent: 30/300 }\n    ];\n    return investorsX;\n  }\n\n  const getProperties = async () => {\n    // Solidity: Data to be returned using contract.methods.call() \n    const properties = [{\n      propertyCode: 'P01',\n      propertyName: 'Property 1',\n      propertyCountry: 'FR',\n      valuation: 30000,\n      thumbPhoto: 'Photo' },\n      {\n      propertyCode: 'P02',\n      propertyName: 'Property 2',\n      propertyCountry: 'DE',\n      valuation: 450000,\n      thumbPhoto: 'Photo' },\n      {\n      propertyCode: 'P03',\n      propertyName: 'Property 3',\n      propertyCountry: 'FR',\n      valuation: 1450000,\n      thumbPhoto: 'Photo'\n     }];\n    return properties;\n}\n\n  const investInFund = async (_side, _daiAmount, _shareAmount) => {\n    // Called by InvestInFund button\n    // Solidity: Data to be sent using contract.methods.send() \n    // Add data to array\n\n    // Return updated dataset to display new investor data in grid, pie and pie windows\n    const funds = await getFundBalances();\n    const investors = await getInvestorBalances();\n\n  }\n\n  useEffect(() => {\n\n    const init = async () => {\n \n      const users = '0x870205F114783A876656af06fa4388514568a0b1';\n      const funds = await getFundBalances();\n      const investors = await getInvestorBalances();\n      const properties = await getProperties();\n\n      setUsers(users);\n      setFunds(funds);\n      setInvestors(investors);\n      setProperties(properties);\n      \n    };\n    init();\n  },[])\n\n  return (\n    <div className=\"wrapper\"> \n\n      <div className=\"box header\">\n        <Header users={users} />\n      </div>\n\n      <div className=\"box investor\">\n        <Investors investors={investors} />      \n        <InvestInFundModal investInFund={investInFund} />\n      </div>\n\n      <div className=\"box investorpie\">\n        <InvestorsPie investors={investors} />      \n      </div>\n\n      <div className=\"box investorbar\">\n        <InvestorsBar investors={investors} />      \n      </div>\n\n      <div className=\"box property\">\n        <Properties properties={properties}/>\n      </div>\n\n      <div className=\"box fund\">\n        <Fund funds={funds} />      \n      </div>\n\n      <div className=\"box footer\"> Footer </div>\n\n    </div>\n  );\n}\n\nexport default App;",["26","27"],"E:\\Projects\\working\\React-development\\project\\sroope-dashboard\\src\\index.js",[],"E:\\Projects\\working\\React-development\\project\\sroope-dashboard\\src\\components\\Investors.js",[],{"ruleId":"28","severity":1,"message":"29","line":87,"column":11,"nodeType":"30","messageId":"31","endLine":87,"endColumn":16},{"ruleId":"28","severity":1,"message":"32","line":88,"column":11,"nodeType":"30","messageId":"31","endLine":88,"endColumn":20},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},"no-unused-vars","'funds' is assigned a value but never used.","Identifier","unusedVar","'investors' is assigned a value but never used.","no-native-reassign",["37"],"no-negated-in-lhs",["38"],"no-global-assign","no-unsafe-negation"]